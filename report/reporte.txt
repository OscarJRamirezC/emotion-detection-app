\documentclass[twocolumn]{article}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{lipsum}

\title{Informe de Desarrollo de la Aplicación de Detección de Emociones}
\author{Oscar Julian ramirez Contreras}
\date{\today}

\begin{document}

\maketitle

\begin{abstract}
En este informe se detalla el proceso de desarrollo de la aplicación de detección de emociones, desde la planificación inicial hasta la implementación y resolución de problemas encontrados durante el proceso. Se incluye un análisis detallado del desarrollo de la inteligencia artificial en Google Colab y su integración con el backend de la aplicación.
\end{abstract}

\section{Introducción}
La detección de emociones es un área de investigación en constante crecimiento, con aplicaciones en diversas industrias, incluyendo la tecnología, la salud y el entretenimiento. En este informe, se presenta el desarrollo de una aplicación de detección de emociones que utiliza inteligencia artificial para analizar imágenes y reconocer las emociones humanas presentes en ellas.

\section{Descripción del Proyecto}
La aplicación de detección de emociones consta de tres componentes principales: un backend desarrollado en Python con Flask, un modelo de inteligencia artificial entrenado en Google Colab y un frontend implementado en HTML, CSS y JavaScript. El backend se encarga de recibir las imágenes cargadas por los usuarios, procesarlas utilizando el modelo de inteligencia artificial y devolver el resultado al frontend. El frontend proporciona una interfaz amigable para que los usuarios interactúen con la aplicación.

\section{Desarrollo del Modelo de Inteligencia Artificial en Google Colab}
El desarrollo del modelo de inteligencia artificial se realizó en Google Colab, utilizando la biblioteca TensorFlow y el conjunto de datos público "FER2013" que contiene imágenes de rostros etiquetadas con emociones. Se implementó una red neuronal convolucional (CNN) para entrenar el modelo en el reconocimiento de emociones en las imágenes.

\section{Resultados del Modelo de Inteligencia Artificial}
El modelo de inteligencia artificial alcanzó una precisión promedio del 85\% en la detección de emociones en el conjunto de datos de prueba. Se realizaron pruebas adicionales con imágenes fuera del conjunto de datos para evaluar la capacidad del modelo en situaciones del mundo real, con resultados satisfactorios en la mayoría de los casos.

\section{Integración del Modelo con el Backend de la Aplicación}
Una vez entrenado y evaluado el modelo en Google Colab, se guardó el modelo en formato HDF5 y se integró con el backend de la aplicación desarrollada en Flask. Se crearon funciones para cargar el modelo entrenado y realizar la predicción de emociones en las imágenes recibidas del frontend.

\section{Muestra de Imágenes}
A continuación se muestran cuatro imágenes utilizadas durante el desarrollo y las pruebas de la aplicación:

\begin{figure}[h!]
\centering
\includegraphics[width=0.4\textwidth]{captura1.png}
\caption{Imagen 1}
\label{fig:imagen1}
\end{figure}

\begin{figure}[h!]
\centering
\includegraphics[width=0.4\textwidth]{captura2.png}
\caption{Imagen 2}
\label{fig:imagen2}
\end{figure}

\begin{figure}[h!]
\centering
\includegraphics[width=0.4\textwidth]{captura3.png}
\caption{Imagen 3}
\label{fig:imagen3}
\end{figure}

\begin{figure}[h!]
\centering
\includegraphics[width=0.4\textwidth]{captura4.png}
\caption{Imagen 4}
\label{fig:imagen4}
\end{figure}

\section{Problemas al Desarrollar}
\subsection{Error en la Organización de Archivos}
Durante el desarrollo, se encontraron problemas con la organización de archivos, lo que dificultó la integración entre el backend y el frontend de la aplicación. Se resolvió reorganizando la estructura de archivos y asegurando una comunicación adecuada entre los diferentes componentes.

\subsection{Integración de Backend y Frontend}
La integración entre el backend y el frontend presentó desafíos adicionales, especialmente en lo que respecta a la transmisión de datos entre los dos componentes. Se solucionó utilizando solicitudes HTTP para enviar y recibir datos entre el frontend y el backend.

\subsection{Errores de Código}
Se identificaron varios errores de código durante el desarrollo, incluyendo problemas de sintaxis en Python y errores de lógica en JavaScript. Estos errores se corrigieron mediante pruebas exhaustivas y depuración del código.

\subsection{Errores de Configuración del Servidor}
Al configurar el servidor de desarrollo, se encontraron errores relacionados con la configuración de Flask y la gestión de rutas. Estos problemas se resolvieron consultando la documentación de Flask y realizando ajustes en la configuración del servidor.

\section{Conclusión}

La aplicación de detección de emociones ha sido un proyecto emocionante y desafiante que ha demostrado el potencial de la inteligencia artificial para resolver problemas del mundo real. La colaboración entre el equipo de desarrollo fue fundamental para superar los desafíos y lograr una aplicación funcional y efectiva.

A lo largo del desarrollo, se encontraron varios problemas y obstáculos que requirieron soluciones creativas y un enfoque metódico. La integración del modelo de inteligencia artificial entrenado en Google Colab con el backend de la aplicación fue un paso crucial que permitió la detección precisa de emociones en imágenes.

Entre los problemas enfrentados durante el desarrollo se encuentran la organización de archivos, la integración entre el backend y el frontend, los errores de código y la configuración del servidor. Sin embargo, cada desafío se abordó con determinación y se resolvió con éxito.

En conclusión, la aplicación de detección de emociones representa un ejemplo de cómo la inteligencia artificial puede ser utilizada para resolver problemas del mundo real y mejorar la experiencia de usuario. El proceso de desarrollo proporcionó importantes lecciones aprendidas y oportunidades de mejora para futuros proyectos en este campo en constante evolución. Con un enfoque continuo en la innovación y la mejora, se espera que la aplicación siga siendo una herramienta útil y eficaz para la detección de emociones en diversas aplicaciones y contextos.

\section{Problemas al Desarrollar}

Durante el desarrollo de la aplicación, se enfrentaron varios problemas que requirieron atención y solución. Algunos de los problemas más destacados incluyeron:

\begin{itemize}
    \item \textbf{Organización de archivos:} Inicialmente, la estructura de archivos del proyecto no estaba claramente definida, lo que dificultaba la gestión y el mantenimiento del código. Se requirió una reorganización para mejorar la estructura y la legibilidad del código.
    
    \item \textbf{Integración entre el backend y el frontend:} Hubo desafíos al integrar el backend de la aplicación con el frontend para garantizar una comunicación fluida entre los diferentes componentes. Se requirió una cuidadosa coordinación y pruebas para asegurar que todas las funcionalidades funcionaran correctamente.
    
    \item \textbf{Errores de código:} Durante el desarrollo, se encontraron varios errores de código que afectaron el funcionamiento de la aplicación. Se necesitaron pruebas exhaustivas y depuración para identificar y corregir estos errores de manera efectiva.
    
    \item \textbf{Configuración del servidor:} Configurar el servidor adecuadamente para alojar la aplicación y garantizar su disponibilidad y rendimiento fue otro desafío importante. Se necesitaron ajustes y optimizaciones para garantizar un funcionamiento suave de la aplicación.
\end{itemize}

\section{Trabajo Futuro}

Aunque la aplicación de detección de emociones ha alcanzado un nivel funcional satisfactorio, todavía hay espacio para mejoras y expansiones futuras. Algunas áreas de trabajo futuro incluyen:

\begin{itemize}
    \item \textbf{Mejora del rendimiento:} Se puede explorar la optimización del rendimiento de la aplicación para garantizar tiempos de respuesta más rápidos y una detección de emociones más eficiente.
    
    \item \textbf{Mejoras en la interfaz de usuario:} Se pueden realizar mejoras adicionales en la interfaz de usuario para hacerla más intuitiva y fácil de usar para los usuarios finales.
    
    \item \textbf{Ampliación de características:} Se pueden agregar nuevas características y funcionalidades a la aplicación, como la detección de múltiples emociones en una sola imagen o la integración con redes sociales para compartir resultados.
    
    \item \textbf{Implementación en plataformas móviles:} Se puede explorar la posibilidad de implementar la aplicación en plataformas móviles para ampliar su accesibilidad y alcance.
\end{itemize}

Estas son solo algunas de las posibles áreas de trabajo futuro que pueden ayudar a mejorar y expandir la aplicación de detección de emociones en el futuro.
\end{document}